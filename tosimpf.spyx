###############################################################################
#   ESCAPADE
# Ergonomic Solver using Cellular Automata for PArtial Differential Equation
#       Copyright (C) 2009 Nicolas Fressengeas <nicolas@fressengeas.net>
#  Distributed under the terms of the GNU General Public License (GPL),
#  version 2 or any later version.  The full text of the GPL is available at:
#                  http://www.gnu.org/licenses/
###############################################################################

def simpfpattern(strpatt):
	newstr=""
	i=0
	while (i<len(strpatt)):
		if strpatt[i]!="?":
			newstr=newstr+strpatt[i]
			i+=1
		elif strpatt[i+1]!="(":
			print ("( expected at",i+1,"of",strpatt)
			return (-1)
		else:
			i+=2
			while strpatt[i]!=")":
				strint=""
				while (strpatt[i]!=")"):
					strint=strint+strpatt[i]
					i+=1
				vnumber=int(strint)
			if strpatt[i+1]!="(":
				print("( expected at",i+1,"of",strpatt)
				return(-1)
			else:
				i+=1
				arglist=[]
				while strpatt[i]!=")":
					i+=1
					strint=""
					while (strpatt[i]!=")" and strpatt[i]!=","):
						strint+=strpatt[i]
						i+=1
					arglist=arglist+[int(strint)]
				l=len(arglist)
				if l==1:
					newarglist=[0,0,0,arglist[0]]
				elif l==2:
					newarglist=[0,0,arglist[1],arglist[0]]
				elif l==3:
					newarglist=[0,arglist[0],arglist[2],arglist[1]]
				elif l==4:
					newarglist=[arglist[1],arglist[0],arglist[3],arglist[2]]
				else:
					print("simpf does not accept more than 4 dimensions")
			newstr+="?("
			for j in range(3):
				newstr+=str(newarglist[j])
				newstr+=","
			newstr+=str(newarglist[3])+")("+str(vnumber)+")"
			i+=1
	return(newstr)
